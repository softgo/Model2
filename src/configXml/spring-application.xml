<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"  
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
    http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context-3.0.xsd  
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/task 
    http://www.springframework.org/schema/task/spring-task-3.0.xsd     
    http://www.springframework.org/schema/aop 
     http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
     
	<!-- 读取资源文件 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<!-- 
		<property name="location" value="classpath:configPros/model_jdbc.properties" />
		-->
		<property name="location">
			<value>classpath:configPros/model_jdbc.properties</value>
		</property>
	</bean>
	
	<!-- 弃用jdbc来操作数据,采用dbcp来操作. 
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${datasource.driverClassName}"/>
		<property name="url" value="${datasource.url}"/>
		<property name="username" value="${datasource.userName}"/>
		<property name="password" value="${datasource.passWord}"/>
		<!-- connections sets -->
		<property name="maxActive" value="${datasource.maxActive}"/>
		<property name="maxIdle" value="${datasource.maxIdle}"/>
		<property name="maxWait" value="${datasource.maxWait}"/>
		<property name="validationQuery" value="${datasource.validationQuery}"/> 
		<property name="removeAbandoned" value="false"/>
		<property name="removeAbandonedTimeout" value="120000"/>
		<property name="logAbandoned" value="false"/>
	</bean>
	
	<!-- .Mybatis的分页查询插件. -->
	<bean id="pagePlugin" class="com.bruce.gogo.pulgin.mybatis.plugin.PagePlugin">
		<property name="properties">
			<props>
				<prop key="dialect">com.bruce.gogo.pulgin.jdbc.dialet.MySQLDialect</prop>
				<prop key="pageSqlId">.*find.*</prop>
			</props>
		</property>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 
		<property name="configLocation" value="classpath:configXml/mybatis.xml" />
		-->
		<property name="configLocation" >
			<value>classpath:configXml/mybatis.xml</value>
		</property>
		<property name="plugins">
			<array>
				<ref bean="pagePlugin" />
			</array>
		</property>
		<property name="mapperLocations">
			<list>
				<!-- 自动匹配Mapper映射文件(新建工程要添加对应的mapper.xml文件.)  -->
				<value>classpath:com/bruce/gogo/entity/*-mapper.xml</value>
				<!-- 加入 *_mapper.xml文件20141020 -->
				<value>classpath:com/system/manager/entity/*-mapper.xml</value>
			</list>
		</property>
	</bean>
	
	
	<!-- 用自动扫描 就要用mybatis的接口,仓储类接口，这个项目没有用到 mybatis 的接口方式所以不要以下扫描否则会出现
		org.mybatis.spring.mapper.MapperScannerConfigurer$Scanner.main No MyBatis mapper was found in 'com.bruce.gogo.dao.impl' package. Please check your configuration.
		警告.
	 -->
	 
	<!-- 给的是接口,多个用","隔开就好.本工程中,不可以使用resourceDao在多处使用,加上如下操作,就会使得系统报错. -->
	<!-- 
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.bruce.gogo.dao" />
	</bean>
	 -->
	
	<!-- 事务配置 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<aop:config>
		<aop:pointcut expression="execution(public * com.*.service.impl.*Impl.*(..))" id="pointcut"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			
			<tx:method name="query*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="find*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="get*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="create*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="del*" propagation="REQUIRED"/>
			<tx:method name="remove*" propagation="REQUIRED"/>

			<tx:method name="modify*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="clear*" propagation="REQUIRED"/>
			
		</tx:attributes>
	</tx:advice>

	<!-- 系统日志的处理(不使用配置,而是使用了注解来操作的...)-->
	<!--
		<bean id="log4jHandlerAOP" class="com.bruce.gogo.syslog.SysLogAopAction"></bean>
		<aop:config proxy-target-class="true">
	        <aop:aspect id="logAspect" ref="log4jHandlerAOP">
	            <aop:pointcut id="logPointCut" expression="execution(* com.bruce.gogo.dao.impl.*.* (..))" />
	            <aop:around method="logAll" pointcut-ref="logPointCut" />
	        </aop:aspect>
	    </aop:config> 
    -->
		
		
	<!-- 使用Spring组件扫描的方式来实现自动注入bean -->
	<!-- 
	<context:component-scan base-package="com.bruce.gogo"/>
	 -->
	<context:component-scan base-package="com.bruce.gogo.dao"/>
	<context:component-scan base-package="com.bruce.gogo.service"/>
	<context:component-scan base-package="com.bruce.gogo.syslog"/>
	<context:component-scan base-package="com.bruce.gogo.security"/>
	
	<!-- 加入扫描类20141020 -->
	<context:component-scan base-package="com.system.manager"/>
	
	<!--  定时器开关  开始-->  
    <task:annotation-driven/>  
    <!--  定时器开关  结束-->   
    
    <!-- 标注类型 的事务配置 -->
	<tx:annotation-driven/>
	
	<!-- 隐式地向 Spring 容器注册  -->
	<context:annotation-config/>
	
	<!-- AOP 面向切面的操作,一般用做权限和日志处理使用. -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>  


	<!-- springcontext .内容取值. -->
	<bean id="springContextUtil" class="com.bruce.gogo.base.util.SpringContextUtil" />
		
</beans>